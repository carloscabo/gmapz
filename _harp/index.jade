include ./includes/mixins.jade
.main-content
  .row
    .container
      h2.page-header Introducción
      p.
        <b>GMapz</b> simplifica creación de mapas con Google Maps API V3, es <b>responsive</b>, soporta <b>múltiples instancias en la misma página</b>, <b>infowindows personalizados</b> y opciones diferentes para cada instancia del mapa. Además es posible crear <em>botones</em> de forma rápida y sencilla que interacciones con los mapas a través de <code>data-attributes</code>.
#intro-1.mb32
  .row
    .container
      .row
        .col-lg-6
          h2 Ficheros básicos
            small &nbsp;&nbsp;&nbsp;y cual es su función
          p.
            GMapz está dividido en varias librerías lo que permite que se se incluyan únicamente las partes de la librería necesarias para la funcionalidad que se necesita.
          p.
            Para un proyecto con la funcionalidad básica necesitaremos incluir:<br><br>
            <code>JQuery (1.9.1+)</code><br>
            <code>GMapz.js</code> (el <em>core</em> de la librería y funciones comunes)<br>
            <code>GMapz.pins.js</code> (definición de los pins)<br>
            <code>GMapz.maps.js</code> (funcionalidades necesarias para la creación de mapas)<br>
          p.
            Si necesitamos un input para emplear las funcionalidades de autocompletado y búsqueda de localizaciones de Google (ver <a href="/autocompletado.html">ejemplos de geolocalización</a>), necesitaremos añadir además:<br>
            <code>GMapz.autocomplete.js</code>
        .col-lg-6
          h2 Librerías de terceros
            small &nbsp;&nbsp;&nbsp;para funcionalidad extendida
          p.
            Algunas funcionalidades extendidas de <b>GMapz</b> requireren de librerías de terceros que deberemos incluír en caso de necesitar dichas funcionalidades.
          h3.
            Mapas responsive
          p.
            Para la funcionalidad del <a href="responsive.html">mapa responsive</a> es necesario incluir la librería <code>MQBE.js</code> (<a href="https://github.com/carloscabo/MQBE" target="_blank">https://github.com/carloscabo/MQBE</a>). Puedes ver un ejemplo de su funcionamiento en la sección correspondiente de esta ayuda ( <a href="/responsive.html">GMapz responsive</a>).
          h3.
            Agrupación de marcadores
          p.
            Para agrupar marcadores automáticamente cuando se hace <em>zoom</em> en la página se emplea la librería <code>MarkerClusterer.js</code>. Información y ejemplos en: <a href="https://github.com/googlemaps/js-marker-clusterer" target="_blank">https://github.com/googlemaps/js-marker-clusterer</a>.
          h3.
            Infowindows personalizados
          p.
            Para crear infowindows personalizados se emplea la librería <code>infobox.js</code>. Información y ejemplos en: <a href="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/docs/examples.html" target="_blank">http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/docs/examples.html</a>.
#includes-header.mb16
  .row
    .container
      p.
        A continuación dispones de un ejemplo de el orden recomendado para incluir las liberías en tu proyecto
      pre.prettyprint.lang-html
        +escape()
          | <!-- JQuery -->
          | <script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.1.4.min.js"></script>
          | 
          | <!-- Librerías de terceros, opcionales -->
          | <script src="js/lib/MQBE.1.04.js"></script>
          | <script src="js/lib/markerclusterer.js"></script>
          | <script src="js/lib/infobox.modified.js"></script>
          | 
          | <!-- GMapz y sus módulos -->
          | <script src="js/gmapz.js"></script>
          | <script src="js/gmapz.pins.js"></script> <!-- JSON de "pins" para los mapas -->
          | <script src="js/gmapz.map.js"></script>
          | <script src="js/gmapz.autocomplete.js"></script>
          | <script src="js/gmapz.locations.js"></script> <!-- JSON de localizaciones -->
          | 
          | <!-- Ready de tu aplicación -->
          | <script src="js/ready.js"></script>
#pins-and-locations
  .row
    .container
      .row
        .col-lg-6
          h2 Fichero de "pins"
          p.
            Cuando hablamos de "pins" nos referimos a las <b>imagenes</b> que emplea Google Maps para señalar las localicaciones en los mapas. Para personalizar estos gráficos en tu aplicación basta con definir un fichero <code>JSON</code> con sus nombres y propiedades que después podrás emplear en el correspondiente fichero de ubicaciones / posiciones / coordenadas (ver a la derecha).
          p
            mark.
              Siempre debes definir los pins <b>ANTES</b> de inicializar ningún mapa, en caso contrario se emplearán los "pins" por defecto de google maps.
          p.
            Puedes echar un ojo al fichero <code>gmapz.pins.js</code> que se ha empleado en todas las demos de esta documentación, empléalo como base para personalizar los <em>pins</em> de tu proyecto. Los pins <mark>deben tener una clave única</mark> que permita referenciarlos más tarde en el fichero de coordenadas.
          h3.
            Hay 2 <b>casos especiales</b> de pins:
          p.
            <b>1.</b> El pin <code>'default'</code> que es el <b>pin que se usará <em>por defecto</em> cuando no se indique ningún otro.</b>
          p.
            <b>2.</b> El pin <code>user_location</code> que es el indica la posición del usuario en el mapa cuando se usan las funciones de <a href="geolocalizacion.html">geolocalización</a>, o las funcionalidades de encontrar la <a href="geolocalizacion.html#sample-6">ubicación más cercana</a> a la del usuario.
          pre.prettyprint.lang-javascript
            +escape()
              | // Pins must be defined BEFORE map initialization
              | var base_path = 'img/gmapz/';
              | GMapz.pins = {
              |   'default': { // IE8 Reserved word, allways must be QUOTED!
              |     pin: {
              |       img: base_path + 'pin.png',
              |       size: [48.0, 48.0],
              |       anchor: [24.0, 48.0]
              |     }
              |   },
              |   user_location: { // Used for user location
              |     pin: {
              |       img: base_path + 'pin-user-location.png',
              |       size: [48.0, 48.0],
              |       anchor: [24.0, 48.0]
              |     }
              |   },
              |   orange: {
              |     pin: {
              |       img: base_path + 'pin-orange.png',
              |       size: [48.0, 48.0],
              |       anchor: [24.0, 48.0]
              |     }
              |   },
              |   blue: {
              |     pin: {
              |       img: base_path + 'pin-blue.png',
              |       size: [48.0, 48.0],
              |       anchor: [24.0, 48.0]
              |     }
              |   },
              |   green: {
              |     pin: {
              |       img: base_path + 'pin-green.png',
              |       size: [48.0, 48.0],
              |       anchor: [24.0, 48.0]
              |     }
              |   }
              | };
        .col-lg-6
          h2 Fichero localizaciones / marcadores
          p.
            Este fichero define las <code>coordenadas</code> de cada marcador en el mapa (en formato <code>latitud</code>, <code>longitud</code>), así como el <code>pin</code> que se dibujará, y el contenido del <code>infowindow</code> <em>(la ventanita que se muestra cuando pulsamos sobre un marcador).</em>
          p
            mark.
              Cada marcador comienza con una <code>clave / key / index</code> que <b>debe ser única</b>, esta clave puede ser numérica o alfanumérica y solo debe emplear caracteres dentro del rango: <b>[a-zA-z0-9_]</b>.
          p.
            Los marcadores pueden tener dos propiedades adicionales: <code>draggable</code>, que indica que usuario podrá mover el marcador y <code>visible</code> que si es <code>false</code> hará que el marcador se añada al mapa <b>oculto inicialmente</b>.
          p.
            Es útil agrupar los marcadores en diferentes objetos, así podremos tener los marcadores organizados.
          pre.prettyprint.lang-javascript
            +escape()
              | // Grupo de en Marruecos
              | var morocco = {
              |   'FEZ' : { // Clave única
              |     pin: 'green', // Pin que se dibujará
              |     lat: 34.0338,
              |     lng: -5.0002,
              |     iw: 'Fez en Marruecos', // Infowindow
              |     draggable: true, // Por defecto es false
              |     visible: false // Por defecto es true
              |   },
              |   'ORAN' : {
              |     lat: 35.6980,
              |     lng: -0.6329
              |   },
              |   12: { // Clave numérica
              |     pin: 'blue',
              |     lat: 43.257206,
              |     lng: -2.923763
              |   }
              | };
              | 
              | // France main cities
              | var france_cities = {
              |   paris: {
              |     lat: 48.8601,
              |     lng: 2.3402,
              |     iw: 'Paris, population: 2107700'
              |   },
              |   marseille: {
              |     lat: 43.3103,
              |     lng: 5.3704,
              |     iw: 'Marseille, population: 826300'
              |   },
              |   lyon: {
              |     lat: 45.7605,
              |     lng: 4.8306,
              |     iw: 'Lyon, population: 443600'
              |   },
              |   //...

