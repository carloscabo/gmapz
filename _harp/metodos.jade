include ./includes/mixins.jade
.main-content
  .row
    .container
      h2.page-header Métodos
      p.
        A continuación dispones de los ejemplos más habituales para configurar un mapa con <b>GMapz</b>, y diferentes opciones de configuración. También dispones de un ejemplo que incorpora <b>agrupación automática de markers</b>.
#sample-1.mb32.metodos-JS
  .row
    .container
      h2 GMapz
        small &nbsp;&nbsp;&nbsp;(gmapz.js)
      .row.container
        p <code><b>GMapz.debug = true;</b></code><br>Activa / desactiva los mensajes de info / error / warning en la consola.
      .row.container
        p <code><b>GMapz.requestAPI( callback_function );</b></code><br>Incrusta en la página la API de google.maps y cuando está lista llama a <code>callback_function</code>, por defecto <code>GMapz.onApiReady</code>.
      .row
        .col-lg-6
          p.
            <code><b>GMapz.onGoogleMapsReady</b></code><br>Método que se ejecuta cuando la API de google.maps está disponible, puede emplearse para ejecutar código propio (ver ejemplo a la derecha).
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
              | GMapz.onGoogleMapsReady = function() {
              |   // Yout custom code here
              | }
      .row.container
        p <code><b>GMapz.getOppositeCorner( center_lat, center_lng, northeast_lat, northeast_lat );</b></code><br>Devuelve la esquina opuesta de un cuadrado imaginario cuyo centro es <code>center_lat, center_lng</code>, y una de sus esquinas <code>northeast_lat, northeast_lat</code>. Devuelve un <b>objeto LatLng de google.maps</b>.
      .row.container
        p <code><b>GMapz.serializeBounds( google_maps_bounds_obj );</b></code><br>Pasándole un objeto bounds de google.maps devuelve un string serializado con la forma: <code>'sw_lat, sw_lng, ne_lat, ne_lng'</code>.
      .row.container
        p <code><b>GMapz.attachActionButtons();</b></code><br>Busca en la página los elementos con el <b>data-attribute</b> <code>data-gmapz...</code>, y les asigna la <a href="data_attributes.html">funcionalidad correspondiente</a>.
    .container
      h2 Map
        small &nbsp;&nbsp;&nbsp;(gmapz.map.js)
      h3 Constructor
      .row
        .col-lg-6
          p.
            <code><b>var my_map = new GMpaz.map( $(element), options );</b></code><br>Crear una nueva instancia de GMapz.map, debemos proporcionar un selector de JQuery, las opciones de configuración de google.maps y opcionalmente un objeto con la lista de ubicaciones.
          p.
            <mark>Si necesitamos acceder directamente al objeto de <b>google.maps</b> podemos hacerlo a través de <code>my_map.map</code></mark>
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
              | var my_map = new GMapz.map(
              |   $('#map-sample-1'), // JQuery selector
              |   google_maps_options,
              |   locations_object // Optional
              | );
      h3 Eventos del mapa
      .row
        .col-lg-6
          p.
            <code><b>my_map.onReady();</b></code><br>Se ejecuta una vez el mapa está inicializado, y sus métodos están diponibles.
          p.
            <mark><b>CUIDADO:</b> Que el objeto esté creado no quiere decir que ya esté <em>pintado</em>, los métodos de google maps relativos a la visualización pueden no estár diponibles, por ejemplo <code>my_map.map.getZoom();</code></mark>
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
              | my_map.onReady = function(){
              |   // this = google.maps instance
              |   this.addLocations( locations_obj );
              | }
      .row
        .col-lg-6
          p.
            <code><b>my_map.onDraw();</b></code><br>Se ejecuta una vez el mapa está dibujado. En este momento todas las propiedades del mapa deberían estar disponibles y deberían poder actualizarse.
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
              | my_map.onDraw = function(){
              |   // this = google.maps instance
              | }
      h3 Métodos del mapa

      h4
        b Marcadores / localizaciones
      .row.container
        p <code><b>my_map.addLocations( locations_obj );</b></code><br>Añade las ubicaciones al mapa y les asigna el <em>pin</em> correspondiente. Consulta el <a href="index.html">formato de localizaciones y pins</a>.
        p
          mark.
            Si necesitas acceder a los marcadores puede hacerlo a traves de <code>my_map.markers</code>, los infowindows se encuentran en <code>my_map.iws</code>.
      .row.container
        p <code><b>my_map.deleteMarkers( marker_group_array );</b></code><br>Elimina las localizaciones y sus infowindows de los índice indicados en <code>marker_group_array</code>.
      .row.container
        p <code><b>my_map.deleteAllMarkers();</b></code><br>Elimina todas las localizaciones y sus infowindows del mapa actual.
      .row.container
        p <code><b>my_map.setMarkerVisibility( idx, visible );</b></code><br>Oculta / muestra el marker con el identificador <code>idx</code>, pasando <code>true</code> como parámetro lo muestra, pasando <code>false</code> lo oculta.
      .row.container
        p <code><b>my_map.setAllMarkersVisibility( visible );</b></code><br>Oculta / muestra <b>todos</b> los markera del mapa, pasando <code>true</code> como parámetro los muestra, pasando <code>false</code> los oculta.
      .row.container
        p <code><b>my_map.showMarkerGroup( marker_group_array, hide_rest );</b></code><br>Muestra el grupo de marcadores en <code>marker_group_array</code>, automáticamente centra el mapa en el grupo. Si se pasa <b>true</b> en el parámetro <code>hide_rest</code> ocultará todos los marker que <b>no estén el el grupo</b>.
      .row.container
        p <code><b>my_map.centerToMarker( marker_idx, zoom );</b></code><br>Centra el mapa en el marcador con la key <b>marker_idx</b>, el parámetro <b>zoom es opcional</b>.
      .row.container
        p <code><b>my_map.findNearestMarkerToPos( lat, lng );</b></code><br>Devuelve el <b>índice</b> del marcador más cercano a una latitud / lungitud dada.

      h4
        b Mapa
      .row.container
        p <code><b>my_map.setZoom( zoom );</b></code><br>Cambia el zoom del mapa.
      .row.container
        p <code><b>my_map.getZoom();</b></code><br>Devuelve el zoom actual.
      .row.container
        p <code><b>my_map.centerTo( lat, lng, zoom );</b></code><br>Centra el mapa en las coordenadas <b>lat, lng</b>, el parámetro <b>zoom es opcional</b>.
      .row.container
        p <code><b>my_map.fitToPlace( place, zoom );</b></code><br>Ajusta la vista del mapa al <code>place</code> indicado aplicando el <code>zoom</code> correspondiente a la vista. El objeto <code>place</code> es del tipo devuelto por un <code>gmapz.autocomplete</code>. <a href="autocompletado.html">Consulta los ejemplos de autocomplete</a>.
      .row.container
        p <code><b>my_map.fitBounds( marker_group_array );</b></code><br>Ajusta la vista del mapa al grupo de marcadores en <code>marker_group_array</code>. Si no se pasa ningún marcador <b>ajustará la vista de forma que se vean todos los marcadores disponibles en el mapa</b> (que estén visibles).

      h4
        b Infowindows
      .row.container
        p <code><b>my_map.openInfoWindow( marker_idx );</b></code><br>Muestra el infowindow correspondiente al key <code>marker_idx</code>.
      .row.container
        p <code><b>my_map.closeInfoWindow( marker_idx );</b></code><br>Oculta el infowindow correspondiente al key <code>marker_idx</code>.
      .row.container
        p <code><b>my_map.closeAllInfoWindows();</b></code><br>Oculta <b>todos</b> los infowindows del mapa.
      .row.container
        p <code><b>my_map.defineInfoBox( infobox_obj );</b></code><br>Asocia un infobox personalizado al mapa. <a href="infowindows.html">Consulta la sección infowindows</a>.

      h4
        b Responsive / bloque / desbloqueo
      .row.container
        p <code><b>my_map.addScrollControl();</b></code><br>Añade el control personalizado para bloquear / desbloquear el mapa y los eventos necesarios. <a href="responsive.html">Consulta la sección responsive</a>.
      .row.container
        p <code><b>my_map.lockScroll();</b></code><br>Bloquea el scroll y el zoom del mapa actual</a>.
      .row.container
        p <code><b>my_map.resumeScroll();</b></code><br>Desbloquea el scroll y el zoom del mapa actual</a>.

      h4
        b Eventos del mapa
      .row
        .col-lg-6
          p.
            <code><b>my_map.onMarkerDragEnd();</b></code><br>Permite crear un evento personalizado para cuando el usuario arrastra <em>(drag)</em> un marcador del mapa. El marcador debe ser creado con la propiedad <code>draggable: true;</code>.
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
              | my_map.onMarkerDragEnd = function(marker){
              |   // Marcador que el usuario ha arrastrado
              |   console.log(marker);
              | }
      .row
        .col-lg-6
          p.
            <code><b>my_map.errorAddressNotFound();</b></code><br>Permite crear un error personalizado para cuando el usuario busca una dirección que no existe o es errónea (o Google no es capaz de localizar).
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
              | my_map.errorAddressNotFound = function(addr){
              |   // Error de dirección no encontrada
              |   console.warn("'"+addr+"' address not found!")
              | }

      h4
        b Helpers / misc
      .row.container
        p <code><b>my_map.convertLatLngToPixels( lat_lng_object );</b></code><br>Convierte un objeto de Google.maps de tipo <code>LatLng</code> a coordenadas en pixels en el mapa.

      h2 Autocomplete
        small &nbsp;&nbsp;&nbsp;(gmapz.autocomplete.js)
      h3.
        Constructor
      .row
        .col-lg-6
          p.
            <code><b>autocomplete_1 = new GMapz.autocomplete( $('.element'), settings );</b></code><br>Crear una nueva instancia de GMapz.autocomplete, debemos proporcionar un selector de JQuery, unos settings <em>(opcional)</em>. Pueden consultarse los settings disponibles en la <a href="https://developers.google.com/maps/documentation/javascript/reference#Autocomplete" target="_blank">documentación de la API de Google de Autocomplete</a>.
          p.
            El objeto de <code>google autocomplete</code> se almacena en <code>my_autoc.instance</code>.
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
            | var ac_settings = {
            |   types: ['geocode'],
            |   offset: 3,
            |   componentRestrictions: { 'country': 'es' }
            | };
            | 
            | var my_autoc = new GMapz.autocomplete(
            |   $('#my-autocomplete'), // JQuery selector
            |   ac_settings
            | );
      h3 Eventos del autocomplete
      .row
        .col-lg-6
          p.
            <code><b>my_map.onReady();</b></code><br>Este evento es ejecutado cuando la instancia de autocomplete está lista.</code>.
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
              | my_autoc.onReady = function(){
              |   // this -> GMapz autocomplete object
              |   console.log('Autocomplete ready!');
              | };
      .row
        .col-lg-6
          p.
            <code><b>my_map.onChange();</b></code><br>Este evento es ejecutado cuando el usuario ha seleccionado una ubicación de las proporcionadas por autocomplete. En el código se muestra la manera típica de acceder al objeto de la localización proporcionado por autocomplete.
        .col-lg-6
          p.
          pre.prettyprint
            +escape()
              | my_autoc.onChange = function(){
              |   // this -> GMapz autocomplete object
              |   // this.instance -> Google autocomplete object
              |   var place = this.instance.getPlace();
              |   console.log(place);
              | };
